<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Demos for D3</title>
	<link rel="stylesheet" type="text/css" href="../style/main.css">
</head>
<body onload="mergeSet()">
	<h2 class="title">合并数据集</h2>
	<svg width="600" height="300" />
</body>
<script src="../js/d3.v7.js"></script>
<script>
	// merge selections
	function mergeSet() {
		//数据 -- 数据格式 0=x;1=y;2=color
		let ds1 = [[2, 3, "green"], [1, 2, "red"], [2, 1, "blue"], [3, 2, "yellow"]]
		let ds2 = [[1, 1, "red"], [3, 3, "black"], [1, 3, "lime"], [3, 1, "blue"]]

		//比例尺
		let scX = d3.scaleLinear().domain([1, 3]).range([150, 400])
		let scY = d3.scaleLinear().domain([1, 3]).range([80, 220])

		// 外层容器
		let svg = d3.select("svg")

		//圆点
		// svg.selectAll("circle")
		// 	.data(ds1).enter()
		// 	.append("circle")
		// 		.attr("r", 5)
		// 		.attr("fill", d => d[2])
		// 		.attr("cx", d => scX(d[1]))
		// 		.attr("cy", (d, i) => scY(i) - 5)
		// 响应点击事件
		svg.on("click", function () {
			//结构互换
			[ds1, ds2] = [ds2, ds1]
			//选中所有的圆点，按第三项颜色绑定新数据源
			let circles = svg.selectAll("circle")
				.data(ds1, d => d[2])

			//删除多余的元素
			circles.exit().remove()

			//合并数据
			circles = circles.enter()
				.append("circle")
					.attr("r", 5)
					.attr("fill", d => d[2])
					.merge(circles)

			//更新圆点位置
			circles
				.transition().duration(500)
				.attr("cx", d => scX(d[0]))
				.attr("cy", d => scY(d[1]))
		})

		//触发点击事件
		svg.dispatch("click")

		//间隔自动点击
		let count = 1
		let timer = setInterval(() => {
			if (count++ > 5) {
				clearInterval(timer)
			}
			svg.dispatch("click")
		}, 2000)
	}
</script>
</html>