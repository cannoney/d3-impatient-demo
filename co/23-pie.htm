<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Demos for D3</title>
	<link rel="stylesheet" type="text/css" href="../style/main.css">
</head>
<body onload="init()">
	<h2 class="title">绘制饼状图</h2>
	<svg width="600" height="300">
	</svg>
</body>
<script src="../js/d3.v7.js"></script>
<script>
	function init() {
		//数据
		let data = [{ name: "Jim", votes: 12 },
								{ name: "Sue", votes:  5 },
								{ name: "Bob", votes: 21 },
								{ name: "Ann", votes: 17 },
								{ name: "Dan", votes:  3 } ]
		//创建饼状图实例，包含饼图切片的角度
		/*
			已按照数据大小降序排列了。顺时针方向。格式：
			index: 2
			data: {name: 'Jim', votes: 12}
			value: 12
			padAngle: 0.025
			startAngle: 4.0846731322900744
			endAngle: 5.383780437223782
		*/
		let pie = d3.pie()
			.value(d => d.votes)
			.padAngle(0.025) (data)
		//console.log(pie)
		//圆弧生成器
		let arcMkr = d3.arc()
			.innerRadius(50).outerRadius(150).cornerRadius(10)
		//比例尺：颜色和饼图关联
		let sc = d3.scaleOrdinal(d3.schemePastel2)
			.domain(pie.map(d => d.index))

		//绘制饼图
		//画布 -- 饼图以原点为中心。平移到中心位置即可
		let g = d3.select("svg")
			.append("g").attr("transform", "translate(300,150)")
		//绘制圆弧
		g.selectAll("path").data(pie).enter().append("path")
			.attr("stroke", "grey")
			.attr("fill", d => sc(d.index))
			.attr("d", arcMkr)
		//绘制文本
		let tradius = arcMkr.innerRadius(90)
		g.selectAll("text").data(pie).enter().append("text")
			.classed("label", true)
			.text(d => d.data.name + "/" + d.value)
			//切片的中心位置坐标：[x,y]
			.attr("x", d => tradius.centroid(d)[0])
			.attr("y", d => tradius.centroid(d)[1])
	}
</script>
</html>