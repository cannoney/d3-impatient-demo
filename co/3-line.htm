<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Demos for D3</title>
	<link rel="stylesheet" type="text/css" href="../style/main.css">
</head>
<body onload="drawLine()">
	<h2 class="title">简单折线图和坐标轴</h2>
</body>
<script src="../js/d3.v7.js"></script>
<script>
	// 绘制折线图
	function drawLine() {
		// 加载制表符分割的数据文件。返回Promise对象
		d3.tsv("../data/dot-multiple.tsv")
			.then(data => {
				// 画布大小
				let width = 600, height = 300
				// 预留边距 -- 保证图形完整
				let margin = 35

				// 线性比例尺：按比例缩放
				let scX = d3.scaleLinear()
					//值域。 extent--返回数组的最大值和最小值
					.domain(d3.extent(data, d => d.x))
					.range([margin, width - margin])

				let scY = d3.scaleLinear()
					.domain(d3.extent(data, d => d.y1))
					.range([height - margin, margin])

				// 直线生成器 -- 每个数据点的水平和垂直坐标
				let lineMaker = d3.line()
					.x( d => scX(d.x))
					.y( d => scY(d.y1))

				// 创建画布
				let svg = d3.select("body")
					.append("svg")
						.attr("width", width)
						.attr("height", height)
				// 容器（折线和点作为一组）
				let g =	svg.append("g")
						.attr("id", "ds")
						.attr("fill", "blue")

				// 先绘制折线
				g.append("path")
					.attr("fill", "none")
					.attr("stroke", "red")
					.attr("d", lineMaker(data))

				// 再绘制节点
				g.selectAll("circle")
					.data(data).enter()
					// 绘制圆点
					.append("circle")
						.attr("r", 5)
						.attr("cx", d => scX(d.x))
						.attr("cy", d => scY(d.y1))

				// 绘制坐标轴
				// 纵坐标轴
				let axY = svg.append("g")
					.attr("id", "axY")
					.attr("transform", `translate(${margin}, 0)`)
				let axMkr = d3.axisLeft(scY)
				axMkr(axY)

				// 横坐标轴
				svg.append("g")
					.call(d3.axisBottom(scX))
					.attr("id", "axX")
					.attr("transform", `translate(0,${height - margin})`)				
			})
	}
</script>
</html>