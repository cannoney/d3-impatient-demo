<!DOCTYPE html>
<html>
<head>
	<meta charset="utf-8">
	<title>Demos for D3</title>
	<link rel="stylesheet" type="text/css" href="../style/main.css">
</head>
<body onload="init()">
	<h2 class="title">柱状图-动画更新</h2>
	<svg width="600" height="300">
	</svg>
</body>
<script src="../js/d3.v7.js"></script>
<script>
	function init() {
		//数据源
		let ds1 = [ 2, 1, 3, 5, 7, 8, 9, 9, 9, 8, 7, 5, 3, 1, 2 ];
    let ds2 = [ 8, 9, 8, 7, 5, 3, 2, 1, 2, 3, 5, 7, 8, 9, 8 ];

    let n = ds1.length, maxx = d3.max(d3.merge([ds1, ds2]))

    //比例尺
    let scX = d3.scaleLinear().domain([0, n]).range([50, 540])
    let scY = d3.scaleLinear().domain([0, maxx]).range([250, 50])

    //画布
    let svg = d3.select("svg")

    //不同颜色
    let colors = ["red", "blue"]
    let idx = 0

    //柱状图使用粗直线表示，而不是矩形
    svg.selectAll("line")
    	.data(ds1).enter()
    	.append("line")
    		.attr("stroke", colors[idx])
    		.attr("stroke-width", 20)
    		.attr("x1", (d,i) => scX(i)).attr("y1", scY(0))
    		.attr("x2", (d,i) => scX(i)).attr("y2", d => scY(d))

    //点击之后，更新数据源
    svg.on("click", () => {
    	//交换数据源
    	[ds1, ds2] = [ds2, ds1]

    	idx = (++idx) % 2;

    	svg.selectAll("line").data(ds1)
    		//平滑过渡。一个一个地更新
    		.transition().duration(1000).delay((d,i) => 200 * i)
    		.attr("y2", d => scY(d))
    		.attr("stroke", colors[idx])
    })

    setTimeout(() => svg.dispatch("click"), 2000)
	}
</script>
</html>